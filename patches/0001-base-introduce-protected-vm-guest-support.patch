From bd8acc561d018b7099bc131fac52e719599c7522 Mon Sep 17 00:00:00 2001
From: Janne Karhunen <Janne.Karhunen@gmail.com>
Date: Mon, 14 Oct 2024 11:31:33 +0300
Subject: [PATCH] base: introduce protected vm guest support

Signed-off-by: Janne Karhunen <Janne.Karhunen@gmail.com>
---
 src/arch/x86/memcpy.c                        | 17 +++++++++++++++++
 src/mainboard/emulation/qemu-i440fx/fw_cfg.c |  4 ++++
 src/security/Kconfig                         |  6 ++++++
 src/southbridge/intel/common/hypcall.h       | 18 ++++++++++++++++++
 src/southbridge/intel/common/smi.c           |  1 +
 5 files changed, 46 insertions(+)
 create mode 100644 src/southbridge/intel/common/hypcall.h

diff --git a/src/arch/x86/memcpy.c b/src/arch/x86/memcpy.c
index 9da2a7512e..1f7b58e014 100644
--- a/src/arch/x86/memcpy.c
+++ b/src/arch/x86/memcpy.c
@@ -4,6 +4,22 @@
 #include <stdbool.h>
 #include <asan.h>
 
+#ifdef CONFIG_PROTECTED_GUEST
+
+void *memcpy(void *vdest, const void *vsrc, size_t bytes)
+{
+	const char *src = vsrc;
+	char *dest = vdest;
+	int i;
+
+	for (i = 0; i < (int)bytes; i++)
+		dest[i] = src[i];
+
+	return vdest;
+}
+
+#else
+
 void *memcpy(void *dest, const void *src, size_t n)
 {
 	unsigned long d0, d1, d2;
@@ -37,3 +53,4 @@ void *memcpy(void *dest, const void *src, size_t n)
 
 	return dest;
 }
+#endif
diff --git a/src/mainboard/emulation/qemu-i440fx/fw_cfg.c b/src/mainboard/emulation/qemu-i440fx/fw_cfg.c
index ad664a6ee0..a992694069 100644
--- a/src/mainboard/emulation/qemu-i440fx/fw_cfg.c
+++ b/src/mainboard/emulation/qemu-i440fx/fw_cfg.c
@@ -37,6 +37,10 @@ static int fw_cfg_present(void)
 			fw_cfg_get(FW_CFG_ID, &fw_ver, sizeof(fw_ver));
 			printk(BIOS_INFO, "Firmware config version id: %d\n", fw_ver);
 		}
+#ifdef CONFIG_PROTECTED_GUEST
+		printk(BIOS_INFO, "Protected guest: disabling DMA\n");
+		fw_ver &= ~FW_CFG_VERSION_DMA;
+#endif
 		fw_cfg_detected = detected + 1;
 	}
 	return fw_cfg_detected - 1;
diff --git a/src/security/Kconfig b/src/security/Kconfig
index abbd0b86b8..320f5c7ebb 100644
--- a/src/security/Kconfig
+++ b/src/security/Kconfig
@@ -9,3 +9,9 @@ source "src/security/tpm/Kconfig"
 source "src/security/memory/Kconfig"
 source "src/security/intel/Kconfig"
 source "src/security/lockdown/Kconfig"
+
+config PROTECTED_GUEST
+	bool
+	default y
+	help
+	  Build support for running inside protected VM guests.
diff --git a/src/southbridge/intel/common/hypcall.h b/src/southbridge/intel/common/hypcall.h
new file mode 100644
index 0000000000..c5875bb4bc
--- /dev/null
+++ b/src/southbridge/intel/common/hypcall.h
@@ -0,0 +1,18 @@
+#define PKVM_HC_SHARE_MEMORY            14
+#define PKVM_HC_UNSHARE_MEMORY          15
+
+#ifdef CONFIG_PROTECTED_GUEST
+	static inline int vmcall(int nr, unsigned int p1, unsigned int p2,
+			unsigned int p3, unsigned int p4, unsigned int p5)
+	{
+		int ret;
+
+		asm volatile("vmcall" : "=a"(ret)
+			: "a"(nr), "b"(p1), "c"(p2), "d"(p3), "S"(p4), "D"(p5)
+			: "memory");
+
+		return ret;
+	}
+#else
+	static inline int vmcall(int, int, int) { return 0 };
+#endif
diff --git a/src/southbridge/intel/common/smi.c b/src/southbridge/intel/common/smi.c
index a6e000b233..03c6b27719 100644
--- a/src/southbridge/intel/common/smi.c
+++ b/src/southbridge/intel/common/smi.c
@@ -76,6 +76,7 @@ void global_smi_enable(void)
 
 void smm_southbridge_clear_state(void)
 {
+	printk(BIOS_DEBUG, "smm_southbridge_clear_state()\n");
 	if (smi_enabled())
 		return;
 
-- 
2.34.1

