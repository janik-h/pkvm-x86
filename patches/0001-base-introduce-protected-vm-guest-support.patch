From 44411387730c6078c2311417ded9d7d8e254cab3 Mon Sep 17 00:00:00 2001
From: Janne Karhunen <Janne.Karhunen@gmail.com>
Date: Mon, 27 Jan 2025 15:36:29 +0200
Subject: [PATCH] base: introduce protected vm guest support

Signed-off-by: Janne Karhunen <Janne.Karhunen@gmail.com>
---
 src/drivers/emulation/qemu/fw_cfg.c       |  4 +++
 src/mainboard/emulation/qemu-q35/memmap.c |  4 ++-
 src/security/Kconfig                      |  6 ++++
 src/security/memory/hypcall.h             | 43 +++++++++++++++++++++++
 4 files changed, 56 insertions(+), 1 deletion(-)
 create mode 100644 src/security/memory/hypcall.h

diff --git a/src/drivers/emulation/qemu/fw_cfg.c b/src/drivers/emulation/qemu/fw_cfg.c
index 3725419e7b..80a588a6ad 100644
--- a/src/drivers/emulation/qemu/fw_cfg.c
+++ b/src/drivers/emulation/qemu/fw_cfg.c
@@ -36,6 +36,10 @@ static int fw_cfg_present(void)
 			fw_cfg_get(FW_CFG_ID, &fw_ver, sizeof(fw_ver));
 			printk(BIOS_INFO, "Firmware config version id: %d\n", fw_ver);
 		}
+#ifdef CONFIG_PROTECTED_GUEST
+		printk(BIOS_INFO, "Protected guest: disabling DMA\n");
+		fw_ver &= ~FW_CFG_VERSION_DMA;
+#endif
 		fw_cfg_detected = detected + 1;
 	}
 	return fw_cfg_detected - 1;
diff --git a/src/mainboard/emulation/qemu-q35/memmap.c b/src/mainboard/emulation/qemu-q35/memmap.c
index 3e8da5ca08..262e44243f 100644
--- a/src/mainboard/emulation/qemu-q35/memmap.c
+++ b/src/mainboard/emulation/qemu-q35/memmap.c
@@ -62,15 +62,17 @@ void smm_region(uintptr_t *start, size_t *size)
 
 	*size = decode_tseg_size(esmramc);
 	*start = qemu_get_memory_size() * KiB - *size;
-	printk(BIOS_SPEW, "SMM_BASE: 0x%08lx, SMM_SIZE: %zu MiB\n", *start, *size / MiB);
+	printk(BIOS_INFO, "SMM_BASE: 0x%08lx, SMM_SIZE: %zu MiB\n", *start, *size / MiB);
 }
 
 void smm_open(void)
 {
 	/* Set D_OPEN */
+	printk(BIOS_INFO, "smm_open() SMM_ASEG\n");
 	if (CONFIG(SMM_ASEG))
 		pci_write_config8(HOST_BRIDGE, SMRAMC, D_OPEN | G_SMRAME | C_BASE_SEG);
 
+	printk(BIOS_INFO, "smm_open() SMM_TSEG\n");
 	if (CONFIG(SMM_TSEG))
 		pci_and_config8(HOST_BRIDGE, ESMRAMC, ~T_EN);
 }
diff --git a/src/security/Kconfig b/src/security/Kconfig
index abbd0b86b8..320f5c7ebb 100644
--- a/src/security/Kconfig
+++ b/src/security/Kconfig
@@ -9,3 +9,9 @@ source "src/security/tpm/Kconfig"
 source "src/security/memory/Kconfig"
 source "src/security/intel/Kconfig"
 source "src/security/lockdown/Kconfig"
+
+config PROTECTED_GUEST
+	bool
+	default y
+	help
+	  Build support for running inside protected VM guests.
diff --git a/src/security/memory/hypcall.h b/src/security/memory/hypcall.h
new file mode 100644
index 0000000000..aa4b00af78
--- /dev/null
+++ b/src/security/memory/hypcall.h
@@ -0,0 +1,43 @@
+#include <stdint.h>
+
+#define KVM_HC_VAPIC_POLL_IRQ           1
+#define KVM_HC_MMU_OP                   2
+#define KVM_HC_FEATURES                 3
+#define KVM_HC_PPC_MAP_MAGIC_PAGE       4
+#define KVM_HC_KICK_CPU                 5
+#define KVM_HC_MIPS_GET_CLOCK_FREQ      6
+#define KVM_HC_MIPS_EXIT_VM             7
+#define KVM_HC_MIPS_CONSOLE_OUTPUT      8
+#define KVM_HC_CLOCK_PAIRING            9
+#define KVM_HC_SEND_IPI         10
+#define KVM_HC_SCHED_YIELD              11
+#define KVM_HC_MAP_GPA_RANGE            12
+
+#define KVM_HC_PKVM_OP                  20
+
+/* PKVM provided hypercalls for guest use. */
+#define PKVM_GHC_NUM(x) (x + KVM_HC_PKVM_OP)
+
+#define PKVM_GHC_SHARE_MEM              PKVM_GHC_NUM(1)
+#define PKVM_GHC_UNSHARE_MEM            PKVM_GHC_NUM(2)
+#define PKVM_GHC_IOREAD                 PKVM_GHC_NUM(3)
+#define PKVM_GHC_IOWRITE                PKVM_GHC_NUM(4)
+#define PKVM_GHC_GET_VE_INFO            PKVM_GHC_NUM(5)
+#define PKVM_GHC_SET_VE_INFO            PKVM_GHC_NUM(6)
+
+#ifdef CONFIG_PROTECTED_GUEST
+	static inline int hypcall(int nr, unsigned int p1, unsigned int p2,
+			unsigned int p3, unsigned int p4, unsigned int p5)
+	{
+		int ret;
+
+		asm volatile("vmcall" : "=a"(ret)
+			: "a"(nr), "b"(p1), "c"(p2), "d"(p3), "S"(p4), "D"(p5)
+			: "memory");
+
+		return ret;
+	}
+#else
+	static inline int hypcall(int, unsigned int, unsigned int,
+			unsigned int, unsigned int, unsigned int) { return 0 };
+#endif
-- 
2.34.1

